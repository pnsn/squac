// Ngx Datatable overrides
@import "variables";

/* Data Table*/
datatable-scroller {
  width: 100% !important;
  border-bottom: 0px !important;
}

.mat-horizontal-content-container {
  padding-bottom: 10px !important;
}
ngx-datatable {
  width: 100% !important;
  &.ngx-datatable.material {
    box-shadow: unset;
  }
  .datatable-header-cell {
    padding: 5px !important;
    white-space: normal !important;
  }

  .datatable-body-cell,
  .datatable-body-row {
    padding: 1px 3px !important;
    white-space: normal !important;
    line-height: 1.25 !important;
  }
}

.datatable-row-detail {
  width: 100%;
}

.ngx-datatable.material {
  .datatable-header {
    .datatable-header-cell {
      color: black;
    }
  }
}

.ngx-datatable.material.datatable-body .datatable-body-row.active,
.datatable-body-row.active .datatable-row-group,
.group-header-container.active {
  background-color: lighten($sq-lt-blue, 30%) !important;
}
.datatable-body-row.active:hover,
.datatable-body-row.active:hover .datatable-row-group,
.group-header-container.active:hover {
  background-color: lighten($sq-lt-blue, 20%) !important;
}
.datatable-body-row:hover,
.datatable-body-row:hover .datatable-row-group,
.group-header-container:hover {
  background-color: $sq-lt-gray !important;
}
ngx-datatable.shared-view-table {
  .datatable-body {
    // max-height: 80vh;
    overflow-y: scroll;
  }
  &.full {
    .datatable-body {
      max-height: calc(90vh);
    }
  }
  &.half {
    .datatable-body {
      max-height: calc(30vh);
    }
  }

  a {
    color: $sq-blue;
    font-weight: 400;
    text-decoration: none;
    &:hover {
      text-decoration: underline;
    }
  }

  background-color: white;
  datatable-header {
    background-color: $sq-lt-gray;
    border-top: $default-border;
    border-bottom: $default-border;
    .datatable-row-center {
      datatable-header-cell {
        border-left: $default-border;
        border-collapse: collapse;
        line-height: unset !important;
        .datatable-header-cell-wrapper {
          padding: 0px 5px;
          .datatable-header-cell-label {
            font-weight: bold;
          }
        }
        .sort-btn {
          float: right;
        }
      }
      datatable-header-cell:nth-child(1) {
        border-left: none;
      }
    }
  }
  datatable-footer {
    border-top: $default-border;
    .datatable-footer-inner {
      padding: 0px 10px;
    }
  }
  datatable-row-wrapper {
    width: 100% !important;
    .datatable-group-header {
      .group-header-container {
        padding: 5px 10px !important;
      }
      text-align: center;
      background-color: rgba(255, 255, 255, 0.589);

      border-top: $default-border;
      border-bottom: $default-border;
    }
    .datatable-body-cell,
    .datatable-body-row {
      font-weight: lighter;

      white-space: normal !important;
      line-height: 1.25 !important;
    }
    .datatable-body-row {
      padding: 2px 0px !important;
    }
    .datatable-body-cell {
      padding: 1px 8px !important;
    }
    .datatable-body-row {
      border-bottom: $light-border;
    }
  }
  .empty-row {
    padding: 5px 10px;
  }
}

.ngx-datatable .datatable-body .progress-linear {
  display: block;
  position: relative;
  width: 100%;
  height: 5px;
  padding: 0;
  margin: 0;
}
.ngx-datatable .datatable-body .progress-linear .container {
  display: block;
  position: relative;
  overflow: hidden;
  width: 100%;
  height: 5px;
  -webkit-transform: translate(0, 0) scale(1, 1);
  transform: translate(0, 0) scale(1, 1);
  background-color: $sq-lt-gray;
}
.ngx-datatable .datatable-body .progress-linear .container .bar {
  transition: all 0.8s linear;
  -webkit-animation: query 1s infinite cubic-bezier(0.39, 0.575, 0.565, 1);
  animation: query 1s infinite cubic-bezier(0.39, 0.575, 0.565, 1);
  transition: -webkit-transform 0.8s linear;
  transition: transform 0.8s linear;
  background-color: $sq-dk-blue;
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: 100%;
  height: 5px;
}
/**
 * Progress bar animations
 */
@keyframes query {
  0% {
    opacity: 1;
    transform: translateX(-50%) scale(0.3, 1);
  }
  100% {
    opacity: 0;
    transform: translateX(35%) scale(0.3, 1);
  }
}
